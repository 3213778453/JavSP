name: CI 构建

on:
  push:
    branches:
      - master

jobs:
  qemu:
    name: 使用 QEMU 进行跨架构构建
    runs-on: ubuntu-latest  # 使用 Ubuntu 环境运行该作业

    steps:
      # 步骤 1: 检出代码
      - name: 检出代码
        uses: actions/checkout@v4

      # 步骤 2: 设置 QEMU 支持 ARM64 架构
      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64  # 设置目标架构为 ARM64

      # 步骤 3: 使用 ARM64 架构的 Docker 镜像运行 Python 构建环境
      - name: 使用 QEMU 运行 ARM64 架构的 Python 环境
        run: |
          docker run --rm \
            -v $PWD:/workspace \
            -w /workspace \
            --platform linux/arm64 \
            arm64v8/python:3.10 bash -c "
            pip install poetry && \
            poetry install && \
            poetry run python setup.py build_exe -b dist"

      # 步骤 4: 使用 file 命令检查生成的二进制文件架构
      - name: 检查构建产物架构
        run: |
          file dist/JavSP

      # 步骤 5: 上传构建产物
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: 构建产物-${{ github.sha }}
          path: dist
